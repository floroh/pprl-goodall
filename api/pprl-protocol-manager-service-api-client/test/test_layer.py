# coding: utf-8

"""
    PPRL Protocol Manager Service API

    Protocol manager service for privacy-preserving record linkage

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pprl_protocol_manager_service_api_client.models.layer import Layer

class TestLayer(unittest.TestCase):
    """Layer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Layer:
        """Test Layer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Layer`
        """
        model = Layer()
        if include_optional:
            return Layer(
                name = '',
                matcher_method = '',
                batch_size_config = [
                    56
                    ],
                max_batches = 56,
                encoding_method = '',
                update_matcher = True,
                update_type = 'NEW_IMPROVED',
                initial_threshold = 1.337,
                budget = 56,
                error_rate = 1.337,
                project_id = '',
                batch_size = 56,
                current_batch = 56,
                number_of_reviews = 56,
                active = True
            )
        else:
            return Layer(
        )
        """

    def testLayer(self):
        """Test Layer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
