# coding: utf-8

"""
    PPRL Linkage Unit Service API

    Linkage / Matching services for privacy-preserving record linkage

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pprl_linkage_unit_service_api_client.models.matching_dto import MatchingDto

class TestMatchingDto(unittest.TestCase):
    """MatchingDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchingDto:
        """Test MatchingDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchingDto`
        """
        model = MatchingDto()
        if include_optional:
            return MatchingDto(
                id = pprl_linkage_unit_service_api_client.models.matcher_id_dto.MatcherIdDto(
                    method = '', 
                    project = '', ),
                validation = pprl_linkage_unit_service_api_client.models.record_requirements_dto.RecordRequirementsDto(
                    method = '', 
                    supported_encoding_methods = [
                        ''
                        ], 
                    attributes = [
                        pprl_linkage_unit_service_api_client.models.attribute_description_dto.AttributeDescriptionDto(
                            name = '', 
                            display_name = '', 
                            required = True, 
                            validations = [
                                ''
                                ], )
                        ], ),
                config = '',
                classifier_description = ''
            )
        else:
            return MatchingDto(
        )
        """

    def testMatchingDto(self):
        """Test MatchingDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
