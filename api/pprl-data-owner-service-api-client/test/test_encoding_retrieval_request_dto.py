# coding: utf-8

"""
    PPRL Data Owner Service API

    Services for the data owners for privacy-preserving record linkage, including analysing and encoding of the local dataset

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pprl_data_owner_service_api_client.models.encoding_retrieval_request_dto import EncodingRetrievalRequestDto

class TestEncodingRetrievalRequestDto(unittest.TestCase):
    """EncodingRetrievalRequestDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EncodingRetrievalRequestDto:
        """Test EncodingRetrievalRequestDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EncodingRetrievalRequestDto`
        """
        model = EncodingRetrievalRequestDto()
        if include_optional:
            return EncodingRetrievalRequestDto(
                encoding_id = pprl_data_owner_service_api_client.models.encoding_id_dto.EncodingIdDto(
                    method = '', 
                    project = '', ),
                dataset_id = 56,
                record_secret = ''
            )
        else:
            return EncodingRetrievalRequestDto(
                encoding_id = pprl_data_owner_service_api_client.models.encoding_id_dto.EncodingIdDto(
                    method = '', 
                    project = '', ),
        )
        """

    def testEncodingRetrievalRequestDto(self):
        """Test EncodingRetrievalRequestDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
